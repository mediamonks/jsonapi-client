{"id":"../../src/utils/type/generics/literal.ts","dependencies":[{"name":"/Users/nathanuphoff/Projects/~lab/jsonapi/tsconfig.json","includedInParent":true,"mtime":1563448860259},{"name":"/Users/nathanuphoff/Projects/~lab/jsonapi/examples/jsonapi-server/package.json","includedInParent":true,"mtime":1563442418980},{"name":"../index","loc":{"line":1,"column":19},"parent":"/Users/nathanuphoff/Projects/~lab/jsonapi/src/utils/type/generics/literal.ts","resolved":"/Users/nathanuphoff/Projects/~lab/jsonapi/src/utils/type/index.ts"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.literal = void 0;\n\nvar _index = require(\"../index\");\n\nvar literal = function literal(literalValue) {\n  return (0, _index.is)(\"equal to \".concat(String(literalValue)), function (value) {\n    return value === literalValue;\n  });\n};\n\nexports.literal = literal;"},"sourceMaps":{"js":{"mappings":[{"source":"../../src/utils/type/generics/literal.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":8,"column":0}},{"source":"../../src/utils/type/generics/literal.ts","name":null,"original":{"line":4,"column":7},"generated":{"line":10,"column":0}},{"source":"../../src/utils/type/generics/literal.ts","name":null,"original":{"line":4,"column":13},"generated":{"line":10,"column":4}},{"source":"../../src/utils/type/generics/literal.ts","name":null,"original":{"line":4,"column":20},"generated":{"line":10,"column":11}},{"source":"../../src/utils/type/generics/literal.ts","name":null,"original":{"line":4,"column":23},"generated":{"line":10,"column":14}},{"source":"../../src/utils/type/generics/literal.ts","name":null,"original":{"line":4,"column":13},"generated":{"line":10,"column":23}},{"source":"../../src/utils/type/generics/literal.ts","name":null,"original":{"line":4,"column":23},"generated":{"line":10,"column":30}},{"source":"../../src/utils/type/generics/literal.ts","name":null,"original":{"line":5,"column":2},"generated":{"line":10,"column":31}},{"source":"../../src/utils/type/generics/literal.ts","name":null,"original":{"line":4,"column":23},"generated":{"line":10,"column":43}},{"source":"../../src/utils/type/generics/literal.ts","name":null,"original":{"line":6,"column":13},"generated":{"line":10,"column":45}},{"source":"../../src/utils/type/generics/literal.ts","name":null,"original":{"line":7,"column":2},"generated":{"line":11,"column":0}},{"source":"../../src/utils/type/generics/literal.ts","name":null,"original":{"line":7,"column":9},"generated":{"line":11,"column":9}},{"source":"../../src/utils/type/generics/literal.ts","name":null,"original":{"line":8,"column":16},"generated":{"line":11,"column":43}},{"source":"../../src/utils/type/generics/literal.ts","name":null,"original":{"line":8,"column":22},"generated":{"line":11,"column":49}},{"source":"../../src/utils/type/generics/literal.ts","name":null,"original":{"line":8,"column":23},"generated":{"line":11,"column":50}},{"source":"../../src/utils/type/generics/literal.ts","name":null,"original":{"line":8,"column":22},"generated":{"line":11,"column":62}},{"source":"../../src/utils/type/generics/literal.ts","name":null,"original":{"line":7,"column":9},"generated":{"line":11,"column":63}},{"source":"../../src/utils/type/generics/literal.ts","name":null,"original":{"line":9,"column":4},"generated":{"line":11,"column":66}},{"source":"../../src/utils/type/generics/literal.ts","name":null,"original":{"line":9,"column":5},"generated":{"line":11,"column":76}},{"source":"../../src/utils/type/generics/literal.ts","name":null,"original":{"line":9,"column":4},"generated":{"line":11,"column":81}},{"source":"../../src/utils/type/generics/literal.ts","name":null,"original":{"line":9,"column":4},"generated":{"line":12,"column":0}},{"source":"../../src/utils/type/generics/literal.ts","name":null,"original":{"line":9,"column":32},"generated":{"line":12,"column":11}},{"source":"../../src/utils/type/generics/literal.ts","name":null,"original":{"line":9,"column":37},"generated":{"line":12,"column":16}},{"source":"../../src/utils/type/generics/literal.ts","name":null,"original":{"line":9,"column":42},"generated":{"line":12,"column":21}},{"source":"../../src/utils/type/generics/literal.ts","name":null,"original":{"line":9,"column":4},"generated":{"line":12,"column":33}},{"source":"../../src/utils/type/generics/literal.ts","name":null,"original":{"line":9,"column":4},"generated":{"line":13,"column":0}},{"source":"../../src/utils/type/generics/literal.ts","name":null,"original":{"line":7,"column":9},"generated":{"line":13,"column":3}},{"source":"../../src/utils/type/generics/literal.ts","name":null,"original":{"line":7,"column":2},"generated":{"line":13,"column":4}},{"source":"../../src/utils/type/generics/literal.ts","name":null,"original":{"line":11,"column":1},"generated":{"line":14,"column":0}},{"source":"../../src/utils/type/generics/literal.ts","name":null,"original":{"line":4,"column":7},"generated":{"line":14,"column":1}}],"sources":{"../../src/utils/type/generics/literal.ts":"import { Type } from '../lib/Type'\nimport { is } from '../index'\n\nexport const literal = <T extends string | number | boolean | null | undefined>(\n  literalValue: T,\n): Type<T> => {\n  return is(\n    `equal to ${String(literalValue)}`,\n    (value: any): value is T => value === literalValue,\n  )\n}\n"},"lineCount":null}},"error":null,"hash":"3ebefb58657abb99357faca53a76ab08","cacheData":{"env":{}}}