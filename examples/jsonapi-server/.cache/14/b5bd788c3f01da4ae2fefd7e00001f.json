{"id":"../../src/utils/type/types/isInt.ts","dependencies":[{"name":"/Users/nathanuphoff/Projects/~lab/jsonapi/tsconfig.json","includedInParent":true,"mtime":1563448860259},{"name":"/Users/nathanuphoff/Projects/~lab/jsonapi/examples/jsonapi-server/package.json","includedInParent":true,"mtime":1563442418980},{"name":"../index","loc":{"line":1,"column":24},"parent":"/Users/nathanuphoff/Projects/~lab/jsonapi/src/utils/type/types/isInt.ts","resolved":"/Users/nathanuphoff/Projects/~lab/jsonapi/src/utils/type/index.ts"},{"name":"./isNumber","loc":{"line":2,"column":25},"parent":"/Users/nathanuphoff/Projects/~lab/jsonapi/src/utils/type/types/isInt.ts","resolved":"/Users/nathanuphoff/Projects/~lab/jsonapi/src/utils/type/types/isNumber.ts"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isInt = void 0;\n\nvar _index = require(\"../index\");\n\nvar _isNumber = require(\"./isNumber\");\n\nvar isInt = (0, _index.and)(_isNumber.isNumber, (0, _index.is)('an integer', function (value) {\n  return Math.floor(value) === value && value !== Infinity;\n}));\nexports.isInt = isInt;"},"sourceMaps":{"js":{"mappings":[{"source":"../../src/utils/type/types/isInt.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":0}},{"source":"../../src/utils/type/types/isInt.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":10,"column":0}},{"source":"../../src/utils/type/types/isInt.ts","name":null,"original":{"line":4,"column":7},"generated":{"line":12,"column":0}},{"source":"../../src/utils/type/types/isInt.ts","name":null,"original":{"line":4,"column":13},"generated":{"line":12,"column":4}},{"source":"../../src/utils/type/types/isInt.ts","name":null,"original":{"line":4,"column":18},"generated":{"line":12,"column":9}},{"source":"../../src/utils/type/types/isInt.ts","name":null,"original":{"line":4,"column":21},"generated":{"line":12,"column":12}},{"source":"../../src/utils/type/types/isInt.ts","name":null,"original":{"line":5,"column":2},"generated":{"line":12,"column":28}},{"source":"../../src/utils/type/types/isInt.ts","name":null,"original":{"line":4,"column":21},"generated":{"line":12,"column":46}},{"source":"../../src/utils/type/types/isInt.ts","name":null,"original":{"line":6,"column":2},"generated":{"line":12,"column":48}},{"source":"../../src/utils/type/types/isInt.ts","name":null,"original":{"line":7,"column":4},"generated":{"line":12,"column":63}},{"source":"../../src/utils/type/types/isInt.ts","name":null,"original":{"line":6,"column":2},"generated":{"line":12,"column":75}},{"source":"../../src/utils/type/types/isInt.ts","name":null,"original":{"line":8,"column":4},"generated":{"line":12,"column":77}},{"source":"../../src/utils/type/types/isInt.ts","name":null,"original":{"line":8,"column":5},"generated":{"line":12,"column":87}},{"source":"../../src/utils/type/types/isInt.ts","name":null,"original":{"line":8,"column":4},"generated":{"line":12,"column":92}},{"source":"../../src/utils/type/types/isInt.ts","name":null,"original":{"line":8,"column":4},"generated":{"line":13,"column":0}},{"source":"../../src/utils/type/types/isInt.ts","name":null,"original":{"line":9,"column":6},"generated":{"line":13,"column":9}},{"source":"../../src/utils/type/types/isInt.ts","name":null,"original":{"line":9,"column":10},"generated":{"line":13,"column":13}},{"source":"../../src/utils/type/types/isInt.ts","name":null,"original":{"line":9,"column":11},"generated":{"line":13,"column":14}},{"source":"../../src/utils/type/types/isInt.ts","name":null,"original":{"line":9,"column":6},"generated":{"line":13,"column":19}},{"source":"../../src/utils/type/types/isInt.ts","name":null,"original":{"line":9,"column":17},"generated":{"line":13,"column":20}},{"source":"../../src/utils/type/types/isInt.ts","name":null,"original":{"line":9,"column":6},"generated":{"line":13,"column":25}},{"source":"../../src/utils/type/types/isInt.ts","name":null,"original":{"line":9,"column":28},"generated":{"line":13,"column":31}},{"source":"../../src/utils/type/types/isInt.ts","name":null,"original":{"line":9,"column":6},"generated":{"line":13,"column":36}},{"source":"../../src/utils/type/types/isInt.ts","name":null,"original":{"line":9,"column":37},"generated":{"line":13,"column":40}},{"source":"../../src/utils/type/types/isInt.ts","name":null,"original":{"line":9,"column":42},"generated":{"line":13,"column":45}},{"source":"../../src/utils/type/types/isInt.ts","name":null,"original":{"line":9,"column":47},"generated":{"line":13,"column":50}},{"source":"../../src/utils/type/types/isInt.ts","name":null,"original":{"line":8,"column":4},"generated":{"line":13,"column":58}},{"source":"../../src/utils/type/types/isInt.ts","name":null,"original":{"line":8,"column":4},"generated":{"line":14,"column":0}},{"source":"../../src/utils/type/types/isInt.ts","name":null,"original":{"line":6,"column":2},"generated":{"line":14,"column":1}},{"source":"../../src/utils/type/types/isInt.ts","name":null,"original":{"line":4,"column":21},"generated":{"line":14,"column":2}},{"source":"../../src/utils/type/types/isInt.ts","name":null,"original":{"line":4,"column":7},"generated":{"line":14,"column":3}}],"sources":{"../../src/utils/type/types/isInt.ts":"import { and, is } from '../index'\nimport { isNumber } from './isNumber'\n\nexport const isInt = and(\n  isNumber,\n  is(\n    'an integer',\n    (value: any): value is number =>\n      Math.floor(value) === value && value !== Infinity,\n  ),\n)\n"},"lineCount":null}},"error":null,"hash":"db678ea9ea4a539ad5fbfa35af0874d0","cacheData":{"env":{}}}