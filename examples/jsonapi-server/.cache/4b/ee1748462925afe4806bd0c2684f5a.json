{"id":"../../src/utils/type/types/isUint16.ts","dependencies":[{"name":"/Users/nathanuphoff/Projects/~lab/jsonapi/tsconfig.json","includedInParent":true,"mtime":1563448860259},{"name":"/Users/nathanuphoff/Projects/~lab/jsonapi/examples/jsonapi-server/package.json","includedInParent":true,"mtime":1563442418980},{"name":"../utils/constants","loc":{"line":1,"column":25},"parent":"/Users/nathanuphoff/Projects/~lab/jsonapi/src/utils/type/types/isUint16.ts","resolved":"/Users/nathanuphoff/Projects/~lab/jsonapi/src/utils/type/utils/constants.ts"},{"name":"../index","loc":{"line":2,"column":27},"parent":"/Users/nathanuphoff/Projects/~lab/jsonapi/src/utils/type/types/isUint16.ts","resolved":"/Users/nathanuphoff/Projects/~lab/jsonapi/src/utils/type/index.ts"},{"name":"./isUint","loc":{"line":3,"column":23},"parent":"/Users/nathanuphoff/Projects/~lab/jsonapi/src/utils/type/types/isUint16.ts","resolved":"/Users/nathanuphoff/Projects/~lab/jsonapi/src/utils/type/types/isUint.ts"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isUint16 = void 0;\n\nvar _constants = require(\"../utils/constants\");\n\nvar _index = require(\"../index\");\n\nvar _isUint = require(\"./isUint\");\n\nvar isUint16 = (0, _index.and)(_isUint.isUint, (0, _index.range)(0, _constants.BitDepth['16'] - 1));\nexports.isUint16 = isUint16;"},"sourceMaps":{"js":{"mappings":[{"source":"../../src/utils/type/types/isUint16.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":0}},{"source":"../../src/utils/type/types/isUint16.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":10,"column":0}},{"source":"../../src/utils/type/types/isUint16.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":12,"column":0}},{"source":"../../src/utils/type/types/isUint16.ts","name":null,"original":{"line":5,"column":7},"generated":{"line":14,"column":0}},{"source":"../../src/utils/type/types/isUint16.ts","name":null,"original":{"line":5,"column":13},"generated":{"line":14,"column":4}},{"source":"../../src/utils/type/types/isUint16.ts","name":null,"original":{"line":5,"column":21},"generated":{"line":14,"column":12}},{"source":"../../src/utils/type/types/isUint16.ts","name":null,"original":{"line":5,"column":24},"generated":{"line":14,"column":15}},{"source":"../../src/utils/type/types/isUint16.ts","name":null,"original":{"line":5,"column":28},"generated":{"line":14,"column":31}},{"source":"../../src/utils/type/types/isUint16.ts","name":null,"original":{"line":5,"column":24},"generated":{"line":14,"column":45}},{"source":"../../src/utils/type/types/isUint16.ts","name":null,"original":{"line":5,"column":36},"generated":{"line":14,"column":47}},{"source":"../../src/utils/type/types/isUint16.ts","name":null,"original":{"line":5,"column":42},"generated":{"line":14,"column":65}},{"source":"../../src/utils/type/types/isUint16.ts","name":null,"original":{"line":5,"column":36},"generated":{"line":14,"column":66}},{"source":"../../src/utils/type/types/isUint16.ts","name":null,"original":{"line":5,"column":45},"generated":{"line":14,"column":68}},{"source":"../../src/utils/type/types/isUint16.ts","name":null,"original":{"line":5,"column":54},"generated":{"line":14,"column":88}},{"source":"../../src/utils/type/types/isUint16.ts","name":null,"original":{"line":5,"column":45},"generated":{"line":14,"column":92}},{"source":"../../src/utils/type/types/isUint16.ts","name":null,"original":{"line":5,"column":62},"generated":{"line":14,"column":96}},{"source":"../../src/utils/type/types/isUint16.ts","name":null,"original":{"line":5,"column":36},"generated":{"line":14,"column":97}},{"source":"../../src/utils/type/types/isUint16.ts","name":null,"original":{"line":5,"column":24},"generated":{"line":14,"column":98}},{"source":"../../src/utils/type/types/isUint16.ts","name":null,"original":{"line":5,"column":7},"generated":{"line":14,"column":99}}],"sources":{"../../src/utils/type/types/isUint16.ts":"import { BitDepth } from '../utils/constants'\nimport { and, range } from '../index'\nimport { isUint } from './isUint'\n\nexport const isUint16 = and(isUint, range(0, BitDepth['16'] - 1))\n"},"lineCount":null}},"error":null,"hash":"572cbd66225cc4c783995b6720ecc54c","cacheData":{"env":{}}}